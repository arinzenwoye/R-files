## I would like to acknowledge my colleague Arpita Mukherjee in## completing this assignment.  Without our collaborative effort in## understanding the theory and writing the code simultaneoulsy I## would not have been able to solve the problems.  Despite this, I## was unable to generate the QQ-plots because I am traveling today,## and I have simply run out of time. I apologize for that.rm(list=ls())options(scipen = 999)library(Sim.DiffProc)library(sde)library(parallel)library(Rlab)times <- seq(0, 1/252, by = ((1/252)/77))MU <- 0.05## Problem 1sig <- 0.1simx <- matrix(data = 0, nrow = 78, ncol = 100)res <- NULLres <- mclapply(1:100, mc.cores = 4, function(h){     X <- rep(0, 77)     B <- BM(x = 0, t0 = 0, T = 1/252, N = 77)     for(i in 1:length(X)){         simx[i+1,h] <- X[i] + MU*diff(times)[i] + sig*B[i]     }     return(simx[,h])})## Calculation of z_rvresmat=do.call(cbind,res)T <- 1/252N <- 78n <- sqrt(T/N)B2 <- NULLfor (i in 1:100){B2[i] = sum(diff(resmat[,i])^2)}B4 <- NULLfor (i in 1:100){B4[i] = sum(diff(resmat[,i])^4)}B4 <- (B4*N)/(3*T)IV <- (sig^2)*TZ_rv <- NULLfor (i in 1:100){Z_rv[i] = (B2[i] - IV)/(n*sqrt(2*B4[i]))}## Calculation of z_bpvB11 <- NULLfor (i in 1:100){B11[i] <- sum(abs(diff(resmat[1:77,i]))*abs(diff(resmat[2:78,i])))}B11<- (B11*pi)/2B1111 <- NULLfor (i in 1:100){B1111[i] <- sum(abs(diff(resmat[1:75,i]))*abs(diff(resmat[2:76,i]))*abs(diff(resmat[3:77,i]))*abs(diff(resmat[4:78,i])))}B1111 <- (B1111*pi*pi*N)/(T*4)C11 <- sqrt((pi*pi) + (4*pi) - 12 )/2Z_bpv <- NULLfor (i in 1:100){Z_bpv[i] <- (B11[i]- IV)/(n*sqrt(C11*C11*B1111[i]))}# jpeg("G1.jpg")# plot(density(Z_rv))# dev.off()# jpeg("G2.jpg")# plot(density(Z_bpv))# dev.off()## Problem 2KAP <- 5THE <- 0.1ETA <- 0.5RHO <- -0.8simX <- matrix(data = 0, nrow = 78, ncol = 100)simsig <- simXRES <- NULLRES <- lapply(1:100,  function(k){    X <- rep(0, 77)    SIG2 <- rep(0.01, 77)    B <- BM(x = 0, t0 = 0, T = 1/252, N = 78)    W <- BM(x = 0, t0 = 0, T = 1/252, N = 78)    for(l in 1:length(SIG2)){        simsig[l+1,k] <- (SIG2[l] +                         KAP*(THE - SIG2[l])*diff(times)[l] +                         ETA*sqrt(SIG2[l])*(RHO*B[l] +                                             sqrt(1-RHO^2)*                                            W[l]))    }    for(d in 1:length(X)){        simX[d+1,k] <- X[d] + MU*diff(times)[d] +            sqrt(simsig[,k])[d]*B[d]    }    obj <- list(difeq=simX[,k], diff=simsig[,k])    return(obj)})simx2 <- matrix(0, nrow = 78, ncol = 100)simsig2 <- simx2for(i in 1:100){    simx2[,i] <- RES[[i]]$difeq    simsig2[,i] <- RES[[i]]$diff}## Calculation z_rvB2_2 <- NULLfor (i in 1:100){B2_2[i] = sum(diff(simx2[,i])^2)}B4_2 <- NULLfor (i in 1:100){B4_2[i] = sum(diff(simx2[,i])^4)}B4_2 <- (B4_2*78)/(3/252)IV_2 <-  NULLfor(i in 1:100){IV_2[i] <- (1/(252*78))*sum(simsig2[,i])}Z_rv_2 <- NULLfor (i in 1:100){Z_rv_2[i] = (B2_2[i] - IV_2[i])/(0.007132675*sqrt(2*B4_2[i]))}## Calculation of z_bpvB11_2 <- NULLfor (i in 1:100){B11_2[i] <- sum(abs(diff(simx2[1:77,i]))*abs(diff(simx2[2:78,i])))}B11_2<- (B11_2*pi)/2B1111_2 <- NULLfor (i in 1:100){B1111_2[i] <- sum(abs(diff(simx2[1:75,i]))*abs(diff(simx2[2:76,i]))*abs(diff(simx2[3:77,i]))*abs(diff(simx2[4:78,i])))}B1111_2 <- (B1111_2*pi*pi*N)/(T*4)C11 <- sqrt((pi*pi) + (4*pi) - 12 )/2Z_bpv_2 <- NULLfor (i in 1:100){Z_bpv_2[i] = (B11_2[i]- IV_2[i])/(n*sqrt(C11*C11*B1111_2[i]))}jpeg("G3.jpg")plot(density(Z_rv_2))dev.off()jpeg("G4.jpg")plot(density(Z_bpv_2))dev.off()## Problem 3KAP <- 5THE <- 0.1ETA <- 0.5RHO <- -0.8sig <- 0.1MU <- 0.05T <- 1/252N <- 78n <- sqrt(T/N)sim_X <- matrix(data = 0, nrow = 78, ncol = 100)sim_sig <- sim_Xzi <- sim_Xresd <- NULLresd <- lapply(1:100,  function(k){    X <- rep(0, 77)    SIG2 <- rep(0.01, 77)    B <- sqrt(1/(252*78))*rnorm(78, mean = 0, sd = 1)    W <- sqrt(1/(252*78))*rnorm(78, mean = 0, sd = 1)    N <- rexp(78, rate = 3000)    for(l in 1:length(SIG2)){        sim_sig[l+1,k] <- (SIG2[l] +                         KAP*(THE - SIG2[l])*diff(times)[l] +                         ETA*sqrt(SIG2[l])*(RHO*B[l] +                                             sqrt(1-RHO^2)*                                            W[l]))}      S <- NULL      t1 <- rexp(78, rate = 3000)      ret <- NULL      for(i in 1:78){                     t1[i+1] <- t1[i]+t1[i+1]                     S[i]<- ifelse(t1[i] <= 1/252, t1[i] , 0)                     if(S[i] > 0){                     ret[i] <- S[i]                      }                      }           int <- NULL           for(j in 1:length(ret)){           int[j] <- max(which(ret[j] > times))          }         int <- unique(int)         bern <- rbern(length(int), 0.6)for(i in 1:length(int)){zi[int[i],k] <- ifelse(bern[i] == 1,  (-1*0.06*rexp(1, rate = 0.0018)),              (0.04*rexp(1, rate = 0.008)))}    for(d in 1:length(X)){        sim_X[d+1,k] <- X[d] + MU*diff(times)[d] + zi[,k][d]*diff(N)[d] +            sqrt(sim_sig[,k])[d]*B[d]    }    obj <- list( diffx=sim_X[,k], diffsig =sim_sig[,k], diffz = zi[,k])    return(obj)})SIMUX <- matrix(0, nrow = 78, ncol = 100)SIMUSIG <- SIMUXSIMUZI <- SIMUXfor(i in 1:100){    SIMUX[,i] <- resd[[i]]$diffx    SIMUSIG[,i] <- resd[[i]]$diffsig    SIMUZI[,i] <- resd[[i]]$diffz}## Calculation of z_rv_3B2_3 <- NULLfor (i in 1:100){B2_3[i] = sum(diff(SIMUX[,i])^2)}B4_3 <- NULLfor (i in 1:100){B4_3[i] = sum(diff(SIMUX[,i])^4)}B4_3 <- (B4_3*78)/(3/252)IV_3 <-  NULLfor(i in 1:100){IV_3[i] <- (1/(252*78))*sum(SIMUSIG[,i])}Z_rv_3 <- NULLfor (i in 1:100){Z_rv_3[i] = (B2_3[i] - IV_3[i])/(0.007132675*sqrt(2*B4_3[i]))}###calculation of z_bpv_3B11_3 <- NULLfor (i in 1:100){B11_3[i] <- sum(abs(diff(SIMUX[1:77,i]))*abs(diff(SIMUX[2:78,i])))}B11_3<- (B11_3*pi)/2B1111_3 <- NULLfor (i in 1:100){B1111_3[i] <- sum(abs(diff(SIMUX[1:75,i]))*abs(diff(SIMUX[2:76,i]))*abs(diff(SIMUX[3:77,i]))*abs(diff(SIMUX[4:78,i])))}B1111_3 <- (B1111_3*pi*pi*N)/(T*4)C11 <- sqrt((pi*pi) + (4*pi) - 12 )/2Z_bpv_3 <- NULLfor (i in 1:100){Z_bpv_3[i] = (B11_3[i]- IV_3[i])/(n*sqrt(C11*C11*B1111_3[i]))}jpeg("G5.jpg")plot(density(Z_rv_3))dev.off()jpeg("G6.jpg")plot(density(Z_bpv_3))dev.off()## Estimating IVO using alpha iterationsRETA <- unlist(lapply(1:ncol(SIMUX), function(k){        IVT <- B11_3        IVT <- matrix(IVT, nrow = 50, ncol = 100, byrow = T)        alpha <- unique(4*((252*IVT[,k])^0.5)*(78/252)^0.49)        obj <- ifelse(abs(diff(SIMUX[,k])) <= alpha,                      diff(SIMUX[,k]), 0)        for(i in 1:49){            IVT[i+1,k] <- sum(obj^2)            if(abs(IVT[i+1,k] - IVT[i,k]) > 0.05*IVT[i,k])            {                alpha <- 4*((252*IVT[i,k])^0.5)*(78/252)^0.49                obj <- ifelse(abs(diff(SIMUX[,k])) <= alpha,                              diff(SIMUX[,k]), 0)            }else{                return(alpha)            }        }}))B2_alpha <- unlist(lapply(1:length(RETA), function(x){    ret <- ifelse(abs(diff(SIMUX[,x])) <= RETA[x],                  diff(SIMUX[,x]), 0)    ret <- sum(ret^2)}))B4_alpha <- unlist(lapply(1:length(RETA), function(x){    ret <- ifelse(abs(diff(SIMUX[,x])) <= RETA[x],                  diff(SIMUX[,x]), 0)    ret <- sum(ret^4)}))B4_alpha  <- (B4_alpha*78*252)/3JV_hat <- unlist(lapply(1:length(RETA), function(x){    ret <- ifelse(RETA[x] < abs(diff(SIMUX[,x])),                  diff(SIMUX[,x]), 0)    ret <- sum(ret^2)}))r_d_n <- sqrt(1/(252*78))Z_trv <- NULLfor(i in 1:100){Z_trv[i] <- (B2_alpha[i] - IV_3[i])/(r_d_n*sqrt(2*B4_alpha[i]))}jpeg("G7.jpg")plot(density(Z_trv))dev.off()nzero <- NULLfor(i in 1:ncol(SIMUZI)){    nzero[i] <- length(which(SIMUZI[,i] != 0))}smean <- mean(nzero) ## sample mean of number of jumpssvar <- var(nzero) ## sample variance of number of jumps################################################# alp <- function(alpha, obj){##     IVT <- sum(obj^2)##     while(abs(IVT-IVO) > 0.05*IVO){##         alpha <- 4*((252*IVT)^0.5)*(78/252)^0.49##         obj <- ifelse(abs(diff(SIMUX[,1])) <= alpha,##                       diff(SIMUX[,1]), 0)##         IVT <- sum(obj^2)##         print(alpha)##         print(obj)##         print(IVT)##     }## return(alpha)## }