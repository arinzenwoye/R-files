project$Major[project$Major == "Cell Biology and Neuroscience"] <- "Cell Biology And Neuroscience"
project$Major[project$Major == "Exercise Science and Sport Studies"] <- "Exercise Science And Sport Studies"
project$Major[project$Major == "Information Technology and Informatics"] <- "Information Technology And Informatics"
project$Major[project$Major == "Labor and Employment Relations"] <- "Labor And Employment Relations"
project$Major[project$Major == "Labor Studies and Employment Relations"] <- "Labor Studies And Employment Relations"
project$Major[project$Major == "Materials Science and Engineering"] <- "Materials Science And Engineering"
project$Major[project$Major == "Journalism and Media Studies"] <- "Journalism And Media Studies"
# #creating categorical variables
# f_list <- c(3,4,5,39,60)
# for(i in f_list){
#   project[,i] <- factor(project[,i], exclude = NA)
#
#changing variables to numeric and outliers missing
for (i in c(6,61:64)){
project[,i] <- as.numeric(project[,i])
project[,i][project[,i]>4] <- NA
}
project <- mutate(project, total_internships = apply(project[,61:64],1,sum, na.rm = TRUE))
#create internship_related
project <- mutate(project, intership_related = apply(project[,c(55:57,59)], 1, sum, na.rm = TRUE))
project$intership_related <- ifelse(project$intership_related == 0, 0, 1) # 1 if related_internship, 0 if not
#creating broad_cart
broad_cart <- read.csv("/Users/arinzenwoye/Desktop/Research Files/broad_cart.csv", stringsAsFactors = FALSE)
project_1 <- merge(project, broad_cart, by = "Major", all = TRUE)
project_2 <- project_1[!is.na(project_1$Response_ID),]
#model
attach(project_2)
model <- project_2 %>%
filter(project_2$postgrad_status %in%
c("Employed full-time, full-time entrepreneur, full-time post-graduation internship, full-time fellowship, etc. (on average 30 hours or more per week)",
"Employed part-time, part-time entrepreneur, part-time post-graduation internship, part-time fellowship, etc. (on average less than 30 hours per week)",
"Seeking employment") & Matriculation == "Undergraduate") %>%
select(name, ruid, postgrad_status, gender, ethnicity, gpa, first_gen, active, `internship/co_op`, total_internships, intership_related,
Broad_Category, no_japps, jobsearch_method_ucs, jobsearch_method_media,
jobsearch_method_media, jobsearch_method_print, jobsearch_method_network, jobsearch_method_website,
jobsearch_method_otherpub, jobsearch_method_otherpvt, jobsearch_method_other, Major, age, Matriculation, desc_position, Work)
rm(list=ls())
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(tidyr)
library(Hmisc)
library(pastecs)
library(ggplot2)
library(nnet)
library(mlogit)
project <- read.csv("/Users/arinzenwoye/Desktop/Research Files/plswrk3.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
#project <- read.csv("/Users/arinzenwoye/Desktop/plswrk1.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
project <- project[c(-1,-2),]
project <- select(project, c(4,12,15,17,21,27,35,46,53,54,65,89:94,96:100,
102:107,109:116,154,156,158,162:176,191:195,23,177:180,22,2,26,138,38))
colnames(project) <- c("name", "ruid", "gender", "ethnicity", "school",
"gpa","birthday","postgrad_status", "first_choice",
"first_gen", "start_gross_salary",
"jobsearch_skills_1","jobsearch_skills_2","jobsearch_skills_3",
"jobsearch_skills_4", "jobsearch_skills_5", "jobsearch_skills_6",
"jobsearch_skills_7", "jobsearch_skills_8", "jobsearch_skills_9",
"jobsearch_skills_10", "jobsearch_skills_11", "jobsearch_skills_12",
"jobsearch_skills_13", "jobsearch_skills_14", "jobsearch_skills_15",
"jobsearch_skills_16", "jobsearch_skills_17",
"jobsearch_method_print", "jobsearch_method_media",
"jobsearch_method_network", "jobsearch_method_ucs",
"jobsearch_method_website", "jobsearch_method_otherpvt",
"jobsearch_method_otherpub", "jobsearch_method_other",
"no_joffers", "start_salary", "no_japps", "internship/co_op",
"extracur_1", "extracur_2", "extracur_3", "extracur_4", "extracur_5",
"extracur_6", "extracur_7", "extracur_8", "extracur_9", "extracur_10",
"extracur_11", "extracur_12", "extracur_13", "extracur_14",
"internship_summer", "internship_fall", "internship_spring",
"internship_no", "internship_over1yr","Major", "internships_freshman",
"internships_sophomore", "internships_junior", "internships_senior", "Major_code","Response_ID",
"Matriculation", "desc_position", "Work")
#creating age variable
project$birthday <- as.Date(project$birthday, "%m/%d/%Y")
birth_year <- as.numeric(format(project$birthday,'%Y'))
project <- mutate(project, age = 2016 - birth_year)
#recoding first_choice, first_gen and jobsearch_skills
cart_list <- c(9, 10, 12:36)
for (i in cart_list){
project[,i] <- as.numeric(revalue(project[,i], c("Yes"="1", "No"="0")))
}
#recoding extracurricular activities
cart_list1 <- c(40:59)
for(j in cart_list1){
project[,j] <- ifelse(project[,j]=="",0,1)
}
#recoding internship/co-op
project[,40][is.na(project[,40])] <- 0
#aggregating jobsearch_skills & extracurr activities
#project <- mutate(project, basic_skills_agg = apply(project[,c(12:17,23:28)],1,sum, na.rm = TRUE),
#                  active = apply(project[,41:54],1,sum, na.rm = TRUE))
project <- mutate(project, resume_skills = apply(project[,c(12:17)],1,sum, na.rm = TRUE), netwrk_skills = apply(project[,c(23:28)], 1,sum, na.rm = TRUE),
active = apply(project[,41:54],1,sum, na.rm = TRUE))
project$int_dummy <- NA
for(i in 1:length(project[,18])){
if(is.na(project[,18][i])==TRUE & is.na(project[,19][i])==TRUE & is.na(project[,20][i])==TRUE & is.na(project[,22][i])==TRUE){
project[,73][i] <-  0
} else {
project[,73][i] <- 1
}
}
project <- mutate(project, int_skills = apply(project[,c(18:22)], 1, sum, na.rm = TRUE))
#renaming ethnicity
project[,4] <- mapvalues(project[,4], from = c("More than one race",
"Native Hawaiian or Pacific Islander/Non-Asian", "Unknown",
"American Indian or Alaskan Native","Hispanic, Non-Puerto-Rican",
"Puerto Rican", "No Response"),
to = c(rep("other",4), rep("Hispanic/Puerto-Rican ", 2), NA))
#renaming majors
project$Major[project$Major == "Business and Science"] <- "Business And Science"
project$Major[project$Major == "Cell Biology and Neuroscience"] <- "Cell Biology And Neuroscience"
project$Major[project$Major == "Exercise Science and Sport Studies"] <- "Exercise Science And Sport Studies"
project$Major[project$Major == "Information Technology and Informatics"] <- "Information Technology And Informatics"
project$Major[project$Major == "Labor and Employment Relations"] <- "Labor And Employment Relations"
project$Major[project$Major == "Labor Studies and Employment Relations"] <- "Labor Studies And Employment Relations"
project$Major[project$Major == "Materials Science and Engineering"] <- "Materials Science And Engineering"
project$Major[project$Major == "Journalism and Media Studies"] <- "Journalism And Media Studies"
# #creating categorical variables
# f_list <- c(3,4,5,39,60)
# for(i in f_list){
#   project[,i] <- factor(project[,i], exclude = NA)
#
#changing variables to numeric and outliers missing
for (i in c(6,61:64)){
project[,i] <- as.numeric(project[,i])
project[,i][project[,i]>4] <- NA
}
project <- mutate(project, total_internships = apply(project[,61:64],1,sum, na.rm = TRUE))
#create internship_related
project <- mutate(project, intership_related = apply(project[,c(55:57,59)], 1, sum, na.rm = TRUE))
project$intership_related <- ifelse(project$intership_related == 0, 0, 1) # 1 if related_internship, 0 if not
#creating broad_cart
broad_cart <- read.csv("/Users/arinzenwoye/Desktop/Research Files/broad_cart.csv", stringsAsFactors = FALSE)
project_1 <- merge(project, broad_cart, by = "Major", all = TRUE)
project_2 <- project_1[!is.na(project_1$Response_ID),]
#model
attach(project_2)
model <- project_2 %>%
filter(project_2$postgrad_status %in%
c("Employed full-time, full-time entrepreneur, full-time post-graduation internship, full-time fellowship, etc. (on average 30 hours or more per week)",
"Employed part-time, part-time entrepreneur, part-time post-graduation internship, part-time fellowship, etc. (on average less than 30 hours per week)",
"Seeking employment") & Matriculation == "Undergraduate") %>%
select(name, ruid, postgrad_status, gender, ethnicity, gpa, first_gen, active, `internship/co_op`, total_internships, intership_related,
Broad_Category, resume_skills, netwrk_skills, int_dummy, int_skills, no_japps, jobsearch_method_ucs, jobsearch_method_media,
jobsearch_method_media, jobsearch_method_print, jobsearch_method_network, jobsearch_method_website,
jobsearch_method_otherpub, jobsearch_method_otherpvt, jobsearch_method_other, Major, age, Matriculation, desc_position, Work)
detach(project_2)
attach(model)
#sum of missing values
blanks = is.na(model)
missing_bycol = as.data.frame(apply(blanks,2,sum))
model <- mutate(model, missing_byrow = apply(blanks,1,sum))
##check: sapply(airquality, function(x) sum(is.na(x)))
### Descriptive Statistics
#Basic Statistics
options(scipen = 100)
options(digits = 2)
sum_stas <- stat.desc(model)
#cartegory frequency & modification
b_freq = as.data.frame(sort(table(model$Broad_Category), decreasing = TRUE))
model$Broad_Category <- mapvalues(model$Broad_Category, from = c("Architecture and Related Services",
"Philosophy and Religious Studies",
"Public Administration and Social Service Professions"),
to = c(rep("Other", 3)))
jobsearch_skills_1 - jobsearch_skills_17
rm(list=ls())
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(tidyr)
library(Hmisc)
library(pastecs)
library(ggplot2)
library(nnet)
library(mlogit)
project <- read.csv("/Users/arinzenwoye/Desktop/Research Files/plswrk3.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
#project <- read.csv("/Users/arinzenwoye/Desktop/plswrk1.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
project <- project[c(-1,-2),]
project <- select(project, c(4,12,15,17,21,27,35,46,53,54,65,89:94,96:100,
102:107,109:116,154,156,158,162:176,191:195,23,177:180,22,2,26,138,38))
colnames(project) <- c("name", "ruid", "gender", "ethnicity", "school",
"gpa","birthday","postgrad_status", "first_choice",
"first_gen", "start_gross_salary",
"jobsearch_skills_1","jobsearch_skills_2","jobsearch_skills_3",
"jobsearch_skills_4", "jobsearch_skills_5", "jobsearch_skills_6",
"jobsearch_skills_7", "jobsearch_skills_8", "jobsearch_skills_9",
"jobsearch_skills_10", "jobsearch_skills_11", "jobsearch_skills_12",
"jobsearch_skills_13", "jobsearch_skills_14", "jobsearch_skills_15",
"jobsearch_skills_16", "jobsearch_skills_17",
"jobsearch_method_print", "jobsearch_method_media",
"jobsearch_method_network", "jobsearch_method_ucs",
"jobsearch_method_website", "jobsearch_method_otherpvt",
"jobsearch_method_otherpub", "jobsearch_method_other",
"no_joffers", "start_salary", "no_japps", "internship/co_op",
"extracur_1", "extracur_2", "extracur_3", "extracur_4", "extracur_5",
"extracur_6", "extracur_7", "extracur_8", "extracur_9", "extracur_10",
"extracur_11", "extracur_12", "extracur_13", "extracur_14",
"internship_summer", "internship_fall", "internship_spring",
"internship_no", "internship_over1yr","Major", "internships_freshman",
"internships_sophomore", "internships_junior", "internships_senior", "Major_code","Response_ID",
"Matriculation", "desc_position", "Work")
#creating age variable
project$birthday <- as.Date(project$birthday, "%m/%d/%Y")
birth_year <- as.numeric(format(project$birthday,'%Y'))
project <- mutate(project, age = 2016 - birth_year)
#recoding first_choice, first_gen and jobsearch_skills
cart_list <- c(9, 10, 12:36)
for (i in cart_list){
project[,i] <- as.numeric(revalue(project[,i], c("Yes"="1", "No"="0")))
}
#recoding extracurricular activities
cart_list1 <- c(40:59)
for(j in cart_list1){
project[,j] <- ifelse(project[,j]=="",0,1)
}
#recoding internship/co-op
project[,40][is.na(project[,40])] <- 0
#aggregating jobsearch_skills & extracurr activities
#project <- mutate(project, basic_skills_agg = apply(project[,c(12:17,23:28)],1,sum, na.rm = TRUE),
#                  active = apply(project[,41:54],1,sum, na.rm = TRUE))
project <- mutate(project, resume_skills = apply(project[,c(12:17)],1,sum, na.rm = TRUE), netwrk_skills = apply(project[,c(23:28)], 1,sum, na.rm = TRUE),
active = apply(project[,41:54],1,sum, na.rm = TRUE))
project$int_dummy <- NA
for(i in 1:length(project[,18])){
if(is.na(project[,18][i])==TRUE & is.na(project[,19][i])==TRUE & is.na(project[,20][i])==TRUE & is.na(project[,22][i])==TRUE){
project[,73][i] <-  0
} else {
project[,73][i] <- 1
}
}
project <- mutate(project, int_skills = apply(project[,c(18:22)], 1, sum, na.rm = TRUE))
#renaming ethnicity
project[,4] <- mapvalues(project[,4], from = c("More than one race",
"Native Hawaiian or Pacific Islander/Non-Asian", "Unknown",
"American Indian or Alaskan Native","Hispanic, Non-Puerto-Rican",
"Puerto Rican", "No Response"),
to = c(rep("other",4), rep("Hispanic/Puerto-Rican ", 2), NA))
#renaming majors
project$Major[project$Major == "Business and Science"] <- "Business And Science"
project$Major[project$Major == "Cell Biology and Neuroscience"] <- "Cell Biology And Neuroscience"
project$Major[project$Major == "Exercise Science and Sport Studies"] <- "Exercise Science And Sport Studies"
project$Major[project$Major == "Information Technology and Informatics"] <- "Information Technology And Informatics"
project$Major[project$Major == "Labor and Employment Relations"] <- "Labor And Employment Relations"
project$Major[project$Major == "Labor Studies and Employment Relations"] <- "Labor Studies And Employment Relations"
project$Major[project$Major == "Materials Science and Engineering"] <- "Materials Science And Engineering"
project$Major[project$Major == "Journalism and Media Studies"] <- "Journalism And Media Studies"
# #creating categorical variables
# f_list <- c(3,4,5,39,60)
# for(i in f_list){
#   project[,i] <- factor(project[,i], exclude = NA)
#
#changing variables to numeric and outliers missing
for (i in c(6,61:64)){
project[,i] <- as.numeric(project[,i])
project[,i][project[,i]>4] <- NA
}
project <- mutate(project, total_internships = apply(project[,61:64],1,sum, na.rm = TRUE))
#create internship_related
project <- mutate(project, intership_related = apply(project[,c(55:57,59)], 1, sum, na.rm = TRUE))
project$intership_related <- ifelse(project$intership_related == 0, 0, 1) # 1 if related_internship, 0 if not
#creating broad_cart
broad_cart <- read.csv("/Users/arinzenwoye/Desktop/Research Files/broad_cart.csv", stringsAsFactors = FALSE)
project_1 <- merge(project, broad_cart, by = "Major", all = TRUE)
project_2 <- project_1[!is.na(project_1$Response_ID),]
#model
attach(project_2)
model <- project_2 %>%
filter(project_2$postgrad_status %in%
c("Employed full-time, full-time entrepreneur, full-time post-graduation internship, full-time fellowship, etc. (on average 30 hours or more per week)",
"Employed part-time, part-time entrepreneur, part-time post-graduation internship, part-time fellowship, etc. (on average less than 30 hours per week)",
"Seeking employment") & Matriculation == "Undergraduate") %>%
select(name, ruid, postgrad_status, gender, ethnicity, gpa, first_gen, active, `internship/co_op`, total_internships, intership_related,
Broad_Category, resume_skills, netwrk_skills, int_dummy, int_skills, no_japps, jobsearch_method_ucs, jobsearch_method_media,
jobsearch_method_media, jobsearch_method_print, jobsearch_method_network, jobsearch_method_website, jobsearch_skills_1:jobsearch_skills_17,
jobsearch_method_otherpub, jobsearch_method_otherpvt, jobsearch_method_other, Major, age, Matriculation, desc_position, Work)
detach(project_2)
attach(model)
write.csv(model, "/Users/arinzenwoye/Desktop/new_model4.csv")
rm(list=ls())
library(plyr)
library(dplyr)
library(reshape)
library(reshape2)
library(tidyr)
library(Hmisc)
library(pastecs)
library(ggplot2)
library(nnet)
library(mlogit)
project <- read.csv("/Users/arinzenwoye/Desktop/Research Files/plswrk3.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
#project <- read.csv("/Users/arinzenwoye/Desktop/plswrk1.csv", stringsAsFactors = FALSE, na.strings=c("","NA"))
project <- project[c(-1,-2),]
project <- select(project, c(4,12,15,17,21,27,35,46,53,54,65,89:94,96:100,
102:107,109:116,154,156,158,162:176,191:195,23,177:180,22,2,26,138,38))
colnames(project) <- c("name", "ruid", "gender", "ethnicity", "school",
"gpa","birthday","postgrad_status", "first_choice",
"first_gen", "start_gross_salary",
"jobsearch_skills_1","jobsearch_skills_2","jobsearch_skills_3",
"jobsearch_skills_4", "jobsearch_skills_5", "jobsearch_skills_6",
"jobsearch_skills_7", "jobsearch_skills_8", "jobsearch_skills_9",
"jobsearch_skills_10", "jobsearch_skills_11", "jobsearch_skills_12",
"jobsearch_skills_13", "jobsearch_skills_14", "jobsearch_skills_15",
"jobsearch_skills_16", "jobsearch_skills_17",
"jobsearch_method_print", "jobsearch_method_media",
"jobsearch_method_network", "jobsearch_method_ucs",
"jobsearch_method_website", "jobsearch_method_otherpvt",
"jobsearch_method_otherpub", "jobsearch_method_other",
"no_joffers", "start_salary", "no_japps", "internship/co_op",
"extracur_1", "extracur_2", "extracur_3", "extracur_4", "extracur_5",
"extracur_6", "extracur_7", "extracur_8", "extracur_9", "extracur_10",
"extracur_11", "extracur_12", "extracur_13", "extracur_14",
"internship_summer", "internship_fall", "internship_spring",
"internship_no", "internship_over1yr","Major", "internships_freshman",
"internships_sophomore", "internships_junior", "internships_senior", "Major_code","Response_ID",
"Matriculation", "desc_position", "Work")
#creating age variable
project$birthday <- as.Date(project$birthday, "%m/%d/%Y")
birth_year <- as.numeric(format(project$birthday,'%Y'))
project <- mutate(project, age = 2016 - birth_year)
#recoding first_choice, first_gen and jobsearch_skills
cart_list <- c(9, 10, 12:36)
for (i in cart_list){
project[,i] <- as.numeric(revalue(project[,i], c("Yes"="1", "No"="0")))
}
#recoding extracurricular activities
cart_list1 <- c(40:59)
for(j in cart_list1){
project[,j] <- ifelse(project[,j]=="",0,1)
}
#recoding internship/co-op
project[,40][is.na(project[,40])] <- 0
#aggregating jobsearch_skills & extracurr activities
#project <- mutate(project, basic_skills_agg = apply(project[,c(12:17,23:28)],1,sum, na.rm = TRUE),
#                  active = apply(project[,41:54],1,sum, na.rm = TRUE))
project <- mutate(project, resume_skills = apply(project[,c(12:17)],1,sum, na.rm = TRUE), netwrk_skills = apply(project[,c(23:28)], 1,sum, na.rm = TRUE),
active = apply(project[,41:54],1,sum, na.rm = TRUE))
project$int_dummy <- NA
for(i in 1:length(project[,18])){
if(is.na(project[,18][i])==TRUE & is.na(project[,19][i])==TRUE & is.na(project[,20][i])==TRUE & is.na(project[,22][i])==TRUE){
project[,74][i] <-  0
} else {
project[,74][i] <- 1
}
}
project <- mutate(project, int_skills = apply(project[,c(18:22)], 1, sum, na.rm = TRUE))
#renaming ethnicity
project[,4] <- mapvalues(project[,4], from = c("More than one race",
"Native Hawaiian or Pacific Islander/Non-Asian", "Unknown",
"American Indian or Alaskan Native","Hispanic, Non-Puerto-Rican",
"Puerto Rican", "No Response"),
to = c(rep("other",4), rep("Hispanic/Puerto-Rican ", 2), NA))
#renaming majors
project$Major[project$Major == "Business and Science"] <- "Business And Science"
project$Major[project$Major == "Cell Biology and Neuroscience"] <- "Cell Biology And Neuroscience"
project$Major[project$Major == "Exercise Science and Sport Studies"] <- "Exercise Science And Sport Studies"
project$Major[project$Major == "Information Technology and Informatics"] <- "Information Technology And Informatics"
project$Major[project$Major == "Labor and Employment Relations"] <- "Labor And Employment Relations"
project$Major[project$Major == "Labor Studies and Employment Relations"] <- "Labor Studies And Employment Relations"
project$Major[project$Major == "Materials Science and Engineering"] <- "Materials Science And Engineering"
project$Major[project$Major == "Journalism and Media Studies"] <- "Journalism And Media Studies"
# #creating categorical variables
# f_list <- c(3,4,5,39,60)
# for(i in f_list){
#   project[,i] <- factor(project[,i], exclude = NA)
#
#changing variables to numeric and outliers missing
for (i in c(6,61:64)){
project[,i] <- as.numeric(project[,i])
project[,i][project[,i]>4] <- NA
}
project <- mutate(project, total_internships = apply(project[,61:64],1,sum, na.rm = TRUE))
#create internship_related
project <- mutate(project, intership_related = apply(project[,c(55:57,59)], 1, sum, na.rm = TRUE))
project$intership_related <- ifelse(project$intership_related == 0, 0, 1) # 1 if related_internship, 0 if not
#creating broad_cart
broad_cart <- read.csv("/Users/arinzenwoye/Desktop/Research Files/broad_cart.csv", stringsAsFactors = FALSE)
project_1 <- merge(project, broad_cart, by = "Major", all = TRUE)
project_2 <- project_1[!is.na(project_1$Response_ID),]
#model
attach(project_2)
model <- project_2 %>%
filter(project_2$postgrad_status %in%
c("Employed full-time, full-time entrepreneur, full-time post-graduation internship, full-time fellowship, etc. (on average 30 hours or more per week)",
"Employed part-time, part-time entrepreneur, part-time post-graduation internship, part-time fellowship, etc. (on average less than 30 hours per week)",
"Seeking employment") & Matriculation == "Undergraduate") %>%
select(name, ruid, postgrad_status, gender, ethnicity, gpa, first_gen, active, `internship/co_op`, total_internships, intership_related,
Broad_Category, resume_skills, netwrk_skills, int_dummy, int_skills, no_japps, jobsearch_method_ucs, jobsearch_method_media,
jobsearch_method_media, jobsearch_method_print, jobsearch_method_network, jobsearch_method_website, jobsearch_skills_1:jobsearch_skills_17,
jobsearch_method_otherpub, jobsearch_method_otherpvt, jobsearch_method_other, Major, age, Matriculation, desc_position, Work)
detach(project_2)
attach(model)
View(model)
table(model$int_dummy)
write.csv(model, "/Users/arinzenwoye/Desktop/new_model4.csv")
x <- 1:3
x <- 1:3
x
names(x) <- c("foo", "coo", "doo")
x
m <- matrix(1:4, nrow = 2, ncol = 2)
m
m <- matrix(1:4, nrow = 4, ncol = 1)
m
dimnames(m) <- list(c("a","b"), c("c", "d"))
m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a","b"), c("c", "d"))
m
help("read.table")
d <- list(foo = 1:4, bar = 0.6)
d[1]
d[[1]]
d["bar"]
t <- c(1, 2, NA, 5, NA, 9)
t[!is.na(t)]
ki <- c("a", "b", "c", "d", "e")
for(i in 1:length(ki)){
print(ki[i])
}
ki <- c("a", "b", "c", "d", "e")
for(i in seq_along(ki)){
print(ki[i])
}
y <- matrix(1:6, 2, 3)
y
y <- matrix(1:6, 2, 3)
for(i in seq_len(nrow(y))){
for(j in seq_len(ncol(y))){
print(y[i,j])
}
}
add_2 <- function(x, y){
x + y
}
add_2(2, 3)
above <- function(x, n){
use <- x > n
x[use]
}
above <- function(x, n = 10){
use <- x > n
x[use]
}
x <- 1:20
above(x, 9)
above <- function(x, n = 10){
use <- x > n
x[use]
}
x <- 1:20
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[ ,i])
}
return(means)
}
View(columnmean)
View(columnmean)
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[ ,i], na.rm = removeNA)
}
return(means)
}
columnmean(airquality)
columnmean(airquality, FALSE)
JNJKB
Sys.time()
x <- list(a = 1:5, b = rnorm(10))
x[2]
x[2,1]
x[[2]]
x[[2]][1]
x[2][1]
x[2][2]
x[[2, 1]]
lapply(x, mean)
xl <- lapply(x, mean)
help("lapply")
x <- 1:4
lapply(x, runif)
x <- 1:4
xl <- lapply(x, runif)
xl <- lapply(x, runif, min = 0, max = 10)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x[2]
lapply(x, function(elt) elt[,1])
x <- list(a = 1:5, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
xl <- lapply(x, mean)
x[2]
x[3]
lapply(x, mean)
sapply(x, mean)
xl <- sapply(x, mean)
xl
airquality
sapply(airquality, mean)
sapply(airquality, mean, na.rm = TRUE)
sapply(airquality[,2], mean, na.rm = TRUE)
sapply(airquality[c("Ozone", "Wind")], mean, na.rm = TRUE)
sapply(airquality[c(1, 2)], mean, na.rm = TRUE)
sapply(airquality[1, 2], mean, na.rm = TRUE)
sapply(airquality[c(1, 2)], mean, na.rm = TRUE)
help("vapply")
library(vcd)
